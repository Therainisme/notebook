(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{388:function(t,e,s){t.exports=s.p+"assets/img/lifecycle-old.5c4592bd.png"},389:function(t,e,s){t.exports=s.p+"assets/img/lifecycle-new.7009279b.png"},444:function(t,e,s){"use strict";s.r(e);var a=s(45),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"🍍-生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🍍-生命周期"}},[t._v("#")]),t._v(" 🍍 生命周期")]),t._v(" "),a("h2",{attrs:{id:"react旧的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react旧的生命周期"}},[t._v("#")]),t._v(" React旧的生命周期")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("constructor")]),t._v("：构造器")]),t._v(" "),a("li",[a("code",[t._v("componentWillMount")]),t._v("：组件即将挂载 "),a("strong",[t._v("（不安全）")])]),t._v(" "),a("li",[a("code",[t._v("render")]),t._v("：组件挂载")]),t._v(" "),a("li",[a("code",[t._v("componentDidMount")]),t._v("：组件挂载完成")]),t._v(" "),a("li",[a("code",[t._v("componentWillUnmount")]),t._v("：组件将要卸载")]),t._v(" "),a("li",[a("code",[t._v("shouldComponentUpdate")]),t._v("：组件即将要更新，这个函数返回"),a("code",[t._v("true")]),t._v("时，组件才会更新。在调用"),a("code",[t._v("this.setState()")]),t._v("函数后React会从这开始向下触发生命周期函数")]),t._v(" "),a("li",[a("code",[t._v("componentWillUpdate(preProps, preState)")]),t._v("：组件将要开始更新，在调用"),a("code",[t._v("this.forceUpdate()")]),t._v("函数后React会从这开始向下触发生命周期函数 "),a("strong",[t._v("（不安全）")])]),t._v(" "),a("li",[a("code",[t._v("componentWillReceiveProps(newProps)")]),t._v("：在父组件"),a("code",[t._v("render")]),t._v("的时候触发。这个函数应该叫"),a("code",[t._v("componentWillReceiveNewProps")]),t._v("才比较没有歧义。"),a("strong",[t._v("（不安全）")])])]),t._v(" "),a("p",[a("img",{attrs:{src:s(388),alt:""}})]),t._v(" "),a("h2",{attrs:{id:"react新的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react新的生命周期"}},[t._v("#")]),t._v(" React新的生命周期")]),t._v(" "),a("p",[t._v("新的生命周期去除了三个函数，这写生命周期方法经常被误解和滥用，在新的React中，已经加入了前缀"),a("code",[t._v("UNSAFE_")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("componentWillMount")])]),t._v(" "),a("li",[a("code",[t._v("componentWillReceiveProps")])]),t._v(" "),a("li",[a("code",[t._v("componentWillUpdate")])])]),t._v(" "),a("p",[t._v("并添加了两个生命周期方法，其他的方法并没有任何的变化，而且这两个方法在实际的开发中也很少用到。")]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[a("code",[t._v("getDerivedStateFromProps")])])]),t._v(" "),a("p",[t._v("它会在调用"),a("code",[t._v("render")]),t._v("方法之前调用，并且在初始挂载和后续更新时都会被调用。它应该返回一个对象当作"),a("code",[t._v("state")]),t._v("，如果返回"),a("code",[t._v("null")]),t._v("则不更新任何内容。")]),t._v(" "),a("p",[t._v("此方法适用于罕见的用例，即"),a("code",[t._v("state")]),t._v("的值在任何时候都取决于"),a("code",[t._v("props")])]),t._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDerivedStateFromProps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// props 父组件传来的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state 组件render之前的state")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回的对象用作this的state")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("ul",[a("li",[a("code",[t._v("getSnapshotBeforeUpdate")])])]),t._v(" "),a("p",[t._v("在最近一次渲染（提交到DOM节点）之前调用。它使得组件能在发生更改之前从DOM中获取一些信息（例如，滚动位置）。而且，此声明周期方法的任何返回值将作为参数传递给"),a("code",[t._v("componetDidUpdate(returnValue)")])]),t._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSnapshotBeforeUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取DOM的一些信息")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回值作为componetDidUpdate的参数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" returnValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("img",{attrs:{src:s(389),alt:""}})])])}),[],!1,null,null,null);e.default=n.exports}}]);